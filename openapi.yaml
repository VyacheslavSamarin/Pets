openapi: 3.0.1
info:
  title: Pets.WebApi
  version: '1.0'
paths:
  /api/Pet:
    get:
      tags:
        - Pet
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PetListVm'
            application/json:
              schema:
                $ref: '#/components/schemas/PetListVm'
            text/json:
              schema:
                $ref: '#/components/schemas/PetListVm'
    post:
      tags:
        - Pet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePetDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreatePetDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreatePetDto'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: integer
                format: int32
            application/json:
              schema:
                type: integer
                format: int32
            text/json:
              schema:
                type: integer
                format: int32
  /api/Pet/by-price:
    get:
      tags:
        - Pet
      parameters:
        - name: MaxPrice
          in: query
          schema:
            type: integer
            format: int32
        - name: MinPrice
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PetListVm'
            application/json:
              schema:
                $ref: '#/components/schemas/PetListVm'
            text/json:
              schema:
                $ref: '#/components/schemas/PetListVm'
  /api/Pet/{id}:
    get:
      tags:
        - Pet
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PetDetailVm'
            application/json:
              schema:
                $ref: '#/components/schemas/PetDetailVm'
            text/json:
              schema:
                $ref: '#/components/schemas/PetDetailVm'
    put:
      tags:
        - Pet
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePetDto'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdatePetDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdatePetDto'
      responses:
        '200':
          description: OK
    delete:
      tags:
        - Pet
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
  /api/Pet/by-type:
    get:
      tags:
        - Pet
      parameters:
        - name: type
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PetListVm'
            application/json:
              schema:
                $ref: '#/components/schemas/PetListVm'
            text/json:
              schema:
                $ref: '#/components/schemas/PetListVm'
  /api/Pet/by-owner:
    get:
      tags:
        - Pet
      parameters:
        - name: owner
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PetListVm'
            application/json:
              schema:
                $ref: '#/components/schemas/PetListVm'
            text/json:
              schema:
                $ref: '#/components/schemas/PetListVm'
components:
  schemas:
    CreatePetDto:
      required:
        - age
        - owner
        - phone
        - price
        - type
      type: object
      properties:
        age:
          type: integer
          format: int32
        price:
          type: number
          format: double
        birthday:
          type: string
          format: date-time
        description:
          type: string
          nullable: true
        type:
          maxLength: 20
          minLength: 0
          type: string
        phone:
          minLength: 1
          pattern: ^\+?[1-9]\d{1,14}$
          type: string
        owner:
          maxLength: 20
          minLength: 0
          type: string
      additionalProperties: false
    PetDetailVm:
      type: object
      properties:
        id:
          type: integer
          format: int32
        age:
          type: integer
          format: int32
        price:
          type: number
          format: double
        birthday:
          type: string
          format: date-time
        description:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        dateAdded:
          type: string
          format: date-time
        dateUpdated:
          type: string
          format: date-time
        phone:
          type: string
          nullable: true
        owner:
          type: string
          nullable: true
      additionalProperties: false
    PetDto:
      type: object
      properties:
        age:
          type: integer
          format: int32
        price:
          type: number
          format: double
        birthday:
          type: string
          format: date-time
        description:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        dateAdded:
          type: string
          format: date-time
        dateUpdated:
          type: string
          format: date-time
        phone:
          type: string
          nullable: true
        owner:
          type: string
          nullable: true
      additionalProperties: false
    PetListVm:
      type: object
      properties:
        pets:
          type: array
          items:
            $ref: '#/components/schemas/PetDto'
          nullable: true
      additionalProperties: false
    UpdatePetDto:
      type: object
      properties:
        age:
          type: integer
          format: int32
          nullable: true
        description:
          type: string
          nullable: true
        price:
          type: number
          format: double
          nullable: true
        birthday:
          type: string
          format: date-time
        type:
          maxLength: 20
          minLength: 0
          type: string
          nullable: true
        phone:
          pattern: ^\+?[1-9]\d{1,14}$
          type: string
          nullable: true
        owner:
          maxLength: 20
          minLength: 0
          type: string
          nullable: true
      additionalProperties: false
